{"ast":null,"code":"var _jsxFileName = \"/var/www/html/WORKS/Galleria/src/pages/login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport LoginLayout from '../layouts/login';\nimport { BASE_URL } from './api/config';\nimport { SITE_NAME } from './api/config';\nimport { Link } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { useUser } from '../context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    token,\n    userType,\n    login\n  } = useUser(); // make sure login is here too\n\n  // ðŸ”’ Redirect if already logged in\n  useEffect(() => {\n    document.title = 'Login | ' + SITE_NAME;\n    if (token && userType) {\n      navigate(`/${userType}/dashboard`);\n    }\n  }, [token, userType, navigate]);\n\n  // ðŸ›‘ Prevent showing login form if already logged in (to avoid flicker)\n  if (token && userType) {\n    return null;\n  }\n  const [user_name, setusername] = useState('');\n  const [password, setPassword] = useState('');\n  const [errors, setErrors] = useState({});\n  const handleLogin = async () => {\n    setErrors({});\n    try {\n      const response = await fetch(BASE_URL + 'auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user_name,\n          password\n        })\n      });\n      const result = await response.json();\n      if (result.success) {\n        login(result.data.token, result.data.user_type);\n        navigate(`/${result.data.user_type}/dashboard`);\n      } else {\n        if (result.error_msg) {\n          setErrors(result.error_msg);\n        } else {\n          toast.error(result.msg);\n        }\n      }\n    } catch (error) {\n      alert('Something went wrong');\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(LoginLayout, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"cEOaXqYLKgHBAWd4cI/u6Od1m3Q=\", false, function () {\n  return [useNavigate, useUser];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","LoginLayout","BASE_URL","SITE_NAME","Link","toast","useUser","jsxDEV","_jsxDEV","Login","_s","navigate","token","userType","login","document","title","user_name","setusername","password","setPassword","errors","setErrors","handleLogin","response","fetch","method","headers","body","JSON","stringify","result","json","success","data","user_type","error_msg","error","msg","alert","console","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/var/www/html/WORKS/Galleria/src/pages/login.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport LoginLayout from '../layouts/login';\nimport { BASE_URL } from './api/config';\nimport { SITE_NAME } from './api/config';\nimport { Link } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { useUser } from '../context';\n\nconst Login = () => {\n    const navigate = useNavigate();\n    const { token, userType, login } = useUser(); // make sure login is here too\n\n    // ðŸ”’ Redirect if already logged in\n    useEffect(() => {\n        document.title = 'Login | ' + SITE_NAME;\n\n        if (token && userType) {\n            navigate(`/${userType}/dashboard`);\n        }\n    }, [token, userType, navigate]);\n\n    // ðŸ›‘ Prevent showing login form if already logged in (to avoid flicker)\n    if (token && userType) {\n        return null;\n    }\n\n    const [user_name, setusername] = useState('');\n    const [password, setPassword] = useState('');\n    const [errors, setErrors] = useState({});\n\n    const handleLogin = async () => {\n        setErrors({});\n        try {\n            const response = await fetch(BASE_URL + 'auth/login', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ user_name, password })\n            });\n            const result = await response.json();\n            if (result.success) {\n                login(result.data.token, result.data.user_type);\n                navigate(`/${result.data.user_type}/dashboard`);\n            } else {\n                if (result.error_msg) {\n                    setErrors(result.error_msg);\n                } else {\n                    toast.error(result.msg);\n                }\n            }\n        } catch (error) {\n            alert('Something went wrong');\n            console.error(error);\n        }\n    };\n\n    return (\n        <LoginLayout>\n            {/* login form content here */}\n        </LoginLayout>\n    );\n};\n\nexport default Login;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,WAAW,MAAM,kBAAkB;AAC1C,SAASC,QAAQ,QAAQ,cAAc;AACvC,SAASC,SAAS,QAAQ,cAAc;AACxC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,KAAK,QAAQ,gBAAgB;AACtC,SAASC,OAAO,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEY,KAAK;IAAEC,QAAQ;IAAEC;EAAM,CAAC,GAAGR,OAAO,CAAC,CAAC,CAAC,CAAC;;EAE9C;EACAP,SAAS,CAAC,MAAM;IACZgB,QAAQ,CAACC,KAAK,GAAG,UAAU,GAAGb,SAAS;IAEvC,IAAIS,KAAK,IAAIC,QAAQ,EAAE;MACnBF,QAAQ,CAAC,IAAIE,QAAQ,YAAY,CAAC;IACtC;EACJ,CAAC,EAAE,CAACD,KAAK,EAAEC,QAAQ,EAAEF,QAAQ,CAAC,CAAC;;EAE/B;EACA,IAAIC,KAAK,IAAIC,QAAQ,EAAE;IACnB,OAAO,IAAI;EACf;EAEA,MAAM,CAACI,SAAS,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC7C,MAAM,CAACqB,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACuB,MAAM,EAAEC,SAAS,CAAC,GAAGxB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAExC,MAAMyB,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5BD,SAAS,CAAC,CAAC,CAAC,CAAC;IACb,IAAI;MACA,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACvB,QAAQ,GAAG,YAAY,EAAE;QAClDwB,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEb,SAAS;UAAEE;QAAS,CAAC;MAChD,CAAC,CAAC;MACF,MAAMY,MAAM,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MACpC,IAAID,MAAM,CAACE,OAAO,EAAE;QAChBnB,KAAK,CAACiB,MAAM,CAACG,IAAI,CAACtB,KAAK,EAAEmB,MAAM,CAACG,IAAI,CAACC,SAAS,CAAC;QAC/CxB,QAAQ,CAAC,IAAIoB,MAAM,CAACG,IAAI,CAACC,SAAS,YAAY,CAAC;MACnD,CAAC,MAAM;QACH,IAAIJ,MAAM,CAACK,SAAS,EAAE;UAClBd,SAAS,CAACS,MAAM,CAACK,SAAS,CAAC;QAC/B,CAAC,MAAM;UACH/B,KAAK,CAACgC,KAAK,CAACN,MAAM,CAACO,GAAG,CAAC;QAC3B;MACJ;IACJ,CAAC,CAAC,OAAOD,KAAK,EAAE;MACZE,KAAK,CAAC,sBAAsB,CAAC;MAC7BC,OAAO,CAACH,KAAK,CAACA,KAAK,CAAC;IACxB;EACJ,CAAC;EAED,oBACI7B,OAAA,CAACP,WAAW;IAAAwC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEC,CAAC;AAEtB,CAAC;AAAClC,EAAA,CAtDID,KAAK;EAAA,QACUT,WAAW,EACOM,OAAO;AAAA;AAAAuC,EAAA,GAFxCpC,KAAK;AAwDX,eAAeA,KAAK;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}